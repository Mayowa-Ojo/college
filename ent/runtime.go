// Code generated by entc, DO NOT EDIT.

package ent

import (
	"college/ent/class"
	"college/ent/department"
	"college/ent/schema"
	"college/ent/staff"
	"college/ent/student"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	classFields := schema.Class{}.Fields()
	_ = classFields
	// classDescTitle is the schema descriptor for title field.
	classDescTitle := classFields[1].Descriptor()
	// class.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	class.TitleValidator = classDescTitle.Validators[0].(func(string) error)
	// classDescCode is the schema descriptor for code field.
	classDescCode := classFields[2].Descriptor()
	// class.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	class.CodeValidator = classDescCode.Validators[0].(func(string) error)
	// classDescUnit is the schema descriptor for unit field.
	classDescUnit := classFields[3].Descriptor()
	// class.UnitValidator is a validator for the "unit" field. It is called by the builders before save.
	class.UnitValidator = func() func(int) error {
		validators := classDescUnit.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(unit int) error {
			for _, fn := range fns {
				if err := fn(unit); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// classDescLocation is the schema descriptor for location field.
	classDescLocation := classFields[5].Descriptor()
	// class.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	class.LocationValidator = classDescLocation.Validators[0].(func(string) error)
	// classDescCreatedAt is the schema descriptor for created_at field.
	classDescCreatedAt := classFields[6].Descriptor()
	// class.DefaultCreatedAt holds the default value on creation for the created_at field.
	class.DefaultCreatedAt = classDescCreatedAt.Default.(func() time.Time)
	// classDescUpdatedAt is the schema descriptor for updated_at field.
	classDescUpdatedAt := classFields[7].Descriptor()
	// class.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	class.DefaultUpdatedAt = classDescUpdatedAt.Default.(func() time.Time)
	// class.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	class.UpdateDefaultUpdatedAt = classDescUpdatedAt.UpdateDefault.(func() time.Time)
	// classDescID is the schema descriptor for id field.
	classDescID := classFields[0].Descriptor()
	// class.DefaultID holds the default value on creation for the id field.
	class.DefaultID = classDescID.Default.(func() uuid.UUID)
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescName is the schema descriptor for name field.
	departmentDescName := departmentFields[1].Descriptor()
	// department.NameValidator is a validator for the "name" field. It is called by the builders before save.
	department.NameValidator = departmentDescName.Validators[0].(func(string) error)
	// departmentDescCode is the schema descriptor for code field.
	departmentDescCode := departmentFields[2].Descriptor()
	// department.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	department.CodeValidator = departmentDescCode.Validators[0].(func(string) error)
	// departmentDescTelephone is the schema descriptor for telephone field.
	departmentDescTelephone := departmentFields[3].Descriptor()
	// department.TelephoneValidator is a validator for the "telephone" field. It is called by the builders before save.
	department.TelephoneValidator = departmentDescTelephone.Validators[0].(func(string) error)
	// departmentDescCreatedAt is the schema descriptor for created_at field.
	departmentDescCreatedAt := departmentFields[4].Descriptor()
	// department.DefaultCreatedAt holds the default value on creation for the created_at field.
	department.DefaultCreatedAt = departmentDescCreatedAt.Default.(func() time.Time)
	// departmentDescUpdatedAt is the schema descriptor for updated_at field.
	departmentDescUpdatedAt := departmentFields[5].Descriptor()
	// department.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	department.DefaultUpdatedAt = departmentDescUpdatedAt.Default.(func() time.Time)
	// department.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	department.UpdateDefaultUpdatedAt = departmentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// departmentDescID is the schema descriptor for id field.
	departmentDescID := departmentFields[0].Descriptor()
	// department.DefaultID holds the default value on creation for the id field.
	department.DefaultID = departmentDescID.Default.(func() uuid.UUID)
	staffFields := schema.Staff{}.Fields()
	_ = staffFields
	// staffDescFirstname is the schema descriptor for firstname field.
	staffDescFirstname := staffFields[1].Descriptor()
	// staff.FirstnameValidator is a validator for the "firstname" field. It is called by the builders before save.
	staff.FirstnameValidator = staffDescFirstname.Validators[0].(func(string) error)
	// staffDescLastname is the schema descriptor for lastname field.
	staffDescLastname := staffFields[2].Descriptor()
	// staff.LastnameValidator is a validator for the "lastname" field. It is called by the builders before save.
	staff.LastnameValidator = staffDescLastname.Validators[0].(func(string) error)
	// staffDescEmail is the schema descriptor for email field.
	staffDescEmail := staffFields[3].Descriptor()
	// staff.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	staff.EmailValidator = staffDescEmail.Validators[0].(func(string) error)
	// staffDescTelephone is the schema descriptor for telephone field.
	staffDescTelephone := staffFields[4].Descriptor()
	// staff.TelephoneValidator is a validator for the "telephone" field. It is called by the builders before save.
	staff.TelephoneValidator = staffDescTelephone.Validators[0].(func(string) error)
	// staffDescSalary is the schema descriptor for salary field.
	staffDescSalary := staffFields[5].Descriptor()
	// staff.SalaryValidator is a validator for the "salary" field. It is called by the builders before save.
	staff.SalaryValidator = staffDescSalary.Validators[0].(func(int) error)
	// staffDescCreatedAt is the schema descriptor for created_at field.
	staffDescCreatedAt := staffFields[8].Descriptor()
	// staff.DefaultCreatedAt holds the default value on creation for the created_at field.
	staff.DefaultCreatedAt = staffDescCreatedAt.Default.(func() time.Time)
	// staffDescUpdatedAt is the schema descriptor for updated_at field.
	staffDescUpdatedAt := staffFields[9].Descriptor()
	// staff.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	staff.DefaultUpdatedAt = staffDescUpdatedAt.Default.(func() time.Time)
	// staff.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	staff.UpdateDefaultUpdatedAt = staffDescUpdatedAt.UpdateDefault.(func() time.Time)
	// staffDescID is the schema descriptor for id field.
	staffDescID := staffFields[0].Descriptor()
	// staff.DefaultID holds the default value on creation for the id field.
	staff.DefaultID = staffDescID.Default.(func() uuid.UUID)
	studentFields := schema.Student{}.Fields()
	_ = studentFields
	// studentDescFirstname is the schema descriptor for firstname field.
	studentDescFirstname := studentFields[1].Descriptor()
	// student.FirstnameValidator is a validator for the "firstname" field. It is called by the builders before save.
	student.FirstnameValidator = studentDescFirstname.Validators[0].(func(string) error)
	// studentDescLastname is the schema descriptor for lastname field.
	studentDescLastname := studentFields[2].Descriptor()
	// student.LastnameValidator is a validator for the "lastname" field. It is called by the builders before save.
	student.LastnameValidator = studentDescLastname.Validators[0].(func(string) error)
	// studentDescEmail is the schema descriptor for email field.
	studentDescEmail := studentFields[3].Descriptor()
	// student.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	student.EmailValidator = studentDescEmail.Validators[0].(func(string) error)
	// studentDescCgpa is the schema descriptor for cgpa field.
	studentDescCgpa := studentFields[5].Descriptor()
	// student.DefaultCgpa holds the default value on creation for the cgpa field.
	student.DefaultCgpa = studentDescCgpa.Default.(float32)
	// studentDescYear is the schema descriptor for year field.
	studentDescYear := studentFields[6].Descriptor()
	// student.YearValidator is a validator for the "year" field. It is called by the builders before save.
	student.YearValidator = func() func(int) error {
		validators := studentDescYear.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(year int) error {
			for _, fn := range fns {
				if err := fn(year); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// studentDescCreatedAt is the schema descriptor for created_at field.
	studentDescCreatedAt := studentFields[7].Descriptor()
	// student.DefaultCreatedAt holds the default value on creation for the created_at field.
	student.DefaultCreatedAt = studentDescCreatedAt.Default.(func() time.Time)
	// studentDescUpdatedAt is the schema descriptor for updated_at field.
	studentDescUpdatedAt := studentFields[8].Descriptor()
	// student.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	student.DefaultUpdatedAt = studentDescUpdatedAt.Default.(func() time.Time)
	// student.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	student.UpdateDefaultUpdatedAt = studentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// studentDescID is the schema descriptor for id field.
	studentDescID := studentFields[0].Descriptor()
	// student.DefaultID holds the default value on creation for the id field.
	student.DefaultID = studentDescID.Default.(func() uuid.UUID)
}

// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ClassesColumns holds the columns for the "classes" table.
	ClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "title", Type: field.TypeString, Size: 250},
		{Name: "code", Type: field.TypeString, Size: 8},
		{Name: "unit", Type: field.TypeInt},
		{Name: "semester", Type: field.TypeEnum, Enums: []string{"FIRST", "SECOND"}},
		{Name: "location", Type: field.TypeString, Size: 250},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ClassesTable holds the schema information for the "classes" table.
	ClassesTable = &schema.Table{
		Name:       "classes",
		Columns:    ClassesColumns,
		PrimaryKey: []*schema.Column{ClassesColumns[0]},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 250},
		{Name: "code", Type: field.TypeString, Size: 5},
		{Name: "telephone", Type: field.TypeString, Size: 15},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
	}
	// StaffsColumns holds the columns for the "staffs" table.
	StaffsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// StaffsTable holds the schema information for the "staffs" table.
	StaffsTable = &schema.Table{
		Name:       "staffs",
		Columns:    StaffsColumns,
		PrimaryKey: []*schema.Column{StaffsColumns[0]},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "firstname", Type: field.TypeString, Size: 250},
		{Name: "lastname", Type: field.TypeString, Size: 250},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "admission_number", Type: field.TypeString},
		{Name: "cgpa", Type: field.TypeFloat32, Default: 0},
		{Name: "year", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "department_id", Type: field.TypeUUID, Nullable: true},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "students_departments_students",
				Columns:    []*schema.Column{StudentsColumns[9]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ClassStudentColumns holds the columns for the "class_student" table.
	ClassStudentColumns = []*schema.Column{
		{Name: "class_id", Type: field.TypeUUID},
		{Name: "student_id", Type: field.TypeUUID},
	}
	// ClassStudentTable holds the schema information for the "class_student" table.
	ClassStudentTable = &schema.Table{
		Name:       "class_student",
		Columns:    ClassStudentColumns,
		PrimaryKey: []*schema.Column{ClassStudentColumns[0], ClassStudentColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "class_student_class_id",
				Columns:    []*schema.Column{ClassStudentColumns[0]},
				RefColumns: []*schema.Column{ClassesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "class_student_student_id",
				Columns:    []*schema.Column{ClassStudentColumns[1]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ClassesTable,
		DepartmentsTable,
		StaffsTable,
		StudentsTable,
		ClassStudentTable,
	}
)

func init() {
	StudentsTable.ForeignKeys[0].RefTable = DepartmentsTable
	ClassStudentTable.ForeignKeys[0].RefTable = ClassesTable
	ClassStudentTable.ForeignKeys[1].RefTable = StudentsTable
}
